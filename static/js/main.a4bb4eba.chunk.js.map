{"version":3,"sources":["contexts.js","utils.js","components/Header/Header.js","WebAPI.js","pages/HomePage/HomePage.js","pages/PostListPage/PostListPage.js","pages/AboutPage/AboutPage.js","pages/NewPostPage/NewPostPage.js","pages/LoginPage/LoginPage.js","pages/RegisterPage/RegisterPage.js","pages/SinglePost/SinglePost.js","components/App/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","HeaderContainer","styled","div","Sitename","NavbarList","Nav","Link","props","background","LeftContainer","Header","location","useLocation","history","useHistory","useContext","user","setUser","pathname","to","onClick","push","BASE_URL","getMe","fetch","headers","then","res","json","getPosts","getPaginatePosts","page","Root","PostContainer","PostTitle","PostDate","PostDelete","handleDelelte","postID","method","authorization","deletePost","data","ok","alert","window","reload","Post","post","id","title","Date","createdAt","toLocaleString","prototypes","PropTypes","object","HomePage","posts","map","PaginateContainer","ul","Paginate","li","PostListPage","useState","paginate","setPaginate","setPosts","useEffect","totalPages","Math","ceil","length","tempArr","i","createPaginateArr","handleClickPaginate","AboutPageContainer","AboutLeftPage","AboutRightPage","Aboutme","MePicture","AboutPage","href","NewPostContainer","NewPostTitle","input","NewPostContent","ErrorMessage","NewPostPage","newPostTitle","setNewPostTitle","newPostContent","setNewPostContent","errorMessage","setErrorMessage","onSubmit","event","preventDefault","body","JSON","stringify","newPost","response","message","type","placeholder","value","onChange","target","Form","form","LoginPage","username","setUsername","password","setPassword","login","toString","RegisterPage","nickname","setNickname","register","required","Article","Title","h1","TitleContent","Author","CreateTime","SinglePost","currentPost","parseInt","currentTime","time","datetime","setTime","year","getFullYear","month","getMonth","date","getDate","hour","getHours","minute","getMinutes","second","getSeconds","mseconds","getMilliseconds","timeStampToString","console","log","userId","PageContainer","BlogPost","slug","useParams","App","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4bb4eba.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext(null);","const TOKEN_NAME = 'token';\r\n\r\nexport const setAuthToken = (token) => {\r\n    localStorage.setItem(TOKEN_NAME, token);\r\n}\r\n\r\nexport const getAuthToken = () => {\r\n    return localStorage.getItem(TOKEN_NAME);\r\n}","import styled from '@emotion/styled';\r\nimport { useContext } from 'react';\r\nimport { Link, useLocation, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../contexts';\r\nimport { setAuthToken } from '../../utils';\r\n\r\n\r\nconst HeaderContainer = styled.div`\r\n    height: 64px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n    padding: 0px 32px;\r\n    box-sizing: border-box;\r\n    background:white;\r\n`;\r\n\r\nconst Sitename = styled.div`\r\n    font-size: 32px;\r\n    font-weight: bold;\r\n    margin-right: 64px;\r\n`;\r\n\r\nconst NavbarList = styled.div`\r\n    display: flex;\r\n    align-item: center;\r\n    height: 64px;\r\n`;\r\n\r\nconst Nav = styled(Link)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    width: 100px;\r\n    cursor: pointer;\r\n    color:black;\r\n    text-decoration: none;\r\n\r\n    background: ${props => props.background};\r\n`;\r\n\r\nconst LeftContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Header = () => {\r\n    const location = useLocation(); \r\n    const history = useHistory();\r\n    const { user, setUser } = useContext(AuthContext);\r\n\r\n    const handleLogout = () => {\r\n        setAuthToken(' ');\r\n        setUser(null);\r\n        if(location.pathname !== '/') {\r\n            history.push('/');\r\n        }\r\n    };  \r\n\r\n    return(\r\n        <HeaderContainer>\r\n            <LeftContainer>\r\n                <Sitename>我的第一個部落格</Sitename>\r\n                <NavbarList>\r\n                    <Nav background={location.pathname === '/' ? 'rgba(0,0,0, 0.2)' : ''}  to=\"/\">首頁</Nav>\r\n                    <Nav background={location.pathname === '/post-list' ? 'rgba(0,0,0, 0.2)' : ''}  to=\"/post-list\">文章列表</Nav>\r\n                    <Nav background={location.pathname === '/about' ? 'rgba(0,0,0, 0.2)' : ''}  to=\"/about\">關於</Nav>\r\n                    {user && <Nav background={location.pathname === '/new-post' ? 'rgba(0,0,0, 0.2)' : ''}  to=\"/new-post\">發布文章</Nav>}\r\n                </NavbarList>\r\n            </LeftContainer>\r\n            <NavbarList>\r\n                {!user && <Nav background={location.pathname === '/login' ? 'rgba(0,0,0, 0.2)' : ''} to=\"/login\">登入</Nav>}\r\n                {!user && <Nav background={location.pathname === '/register' ? 'rgba(0,0,0, 0.2)' : ''} to=\"/register\">註冊</Nav>}\r\n                {user && <Nav onClick={handleLogout}>登出</Nav>}\r\n            </NavbarList>\r\n        </HeaderContainer>\r\n    );\r\n};\r\n\r\nexport default Header;","import { getAuthToken } from './utils';\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me';\r\n\r\n// For Login\r\n// Login Authorization\r\nexport const login = (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n          'content-type':'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n          username,\r\n          password\r\n      })\r\n  })\r\n  .then(res => res.json());\r\n}\r\n// set Token to see if already login\r\nexport const getMe = () => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/me`, {\r\n      headers: {\r\n        'authorization': `Bearer ${token}`,\r\n      }\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\n// For Register\r\n\r\nexport const register = (nickname, username, password) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n}\r\n\r\n// Fetch Posts\r\n\r\nexport const getPosts = () => {\r\n    return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then(res => res.json());\r\n}\r\n\r\nexport const getPaginatePosts = (page) => {\r\n  return fetch(\r\n    `${BASE_URL}/posts?_page=${page}&_limit=5&_sort=id&_order=desc`\r\n  ).then((res) => res.json());\r\n};\r\n\r\n\r\nexport const newPost = (title, body) => {\r\n    const token = getAuthToken();\r\n    return fetch(`${BASE_URL}/posts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        body,\r\n      }),\r\n    }).then((res) => res.json());\r\n  };\r\n\r\nexport const deletePost = (postID) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts/${postID}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};","import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AuthContext } from '../../contexts';\nimport { deletePost } from '../../WebAPI';\n\n\nconst Root = styled.div`\n  top:64px;\n  left:150px;\n  width: 80%;\n  margin: 0 auto;\n  height:80vh;\n   \n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n  flex:1;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PostDelete = styled.div`\n  margin-left: 5px;\n  border:1px solid gray;\n  border-radius:3px;\n  &:hover {\n    background:red;\n    color:white;\n    cursor:pointer;\n  }\n\n`;\n\nconst handleDelelte = (postID) => {\n  \n  deletePost(postID).then((data) => {\n  if(data.ok === 0) { return alert('刪除失敗')};\n    alert('刪除成功！');\n    window.location.reload();\n  });\n}\n\nconst Post = ({post, user}) => {\n  const postID = post.id;\n  return(\n    <PostContainer>\n      <PostTitle to={`/posts/${postID}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      <PostDelete onClick={() => handleDelelte(postID)}>{user ? '刪除' : ' '}</PostDelete>\n    </PostContainer>\n  )\n}\n\nPost.prototypes = {\n  post: PropTypes.object\n};\n\n\nconst HomePage = ({ posts }) => {\n  const { user, setUser } = useContext(AuthContext); \n\n  return(\n    <Root>\n      {posts.map((post) => <Post key={post.id} post={post} user={user}/>)}\n    </Root>\n  );\n};\n\nexport default HomePage;","import styled from '@emotion/styled';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getPosts, getPaginatePosts } from '../../WebAPI';\n\nconst Root = styled.div`\n  top:64px;\n  left:150px;\n  width: 80%;\n  margin: 0 auto;\n  height:80vh;\n   \n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n\n  &:hover {\n    background: rgba(200, 200, 200, 0.1);\n  }\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PaginateContainer = styled.ul`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n`;\n\nconst Paginate = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 25px;\n  height: 25px;\n  margin: 0 10px;\n  border: 1px solid #fbfbfb;\n  border-radius: 3px;\n  list-style: none;\n  cursor: pointer;\n  font-size: 20px;\n  &:hover {\n    background: rgba(200, 200, 200, 0.1);\n  }\n`;\n\n\nconst Post = ({post}) => {\n  return(\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  )\n}\n\nconst createPaginateArr = (totalPages) => {\n  const tempArr = [];\n  for (let i = 1; i <= totalPages; i++) {\n    tempArr.push(i);\n  }\n  return tempArr;\n};\n\nPost.prototypes = {\n  post: PropTypes.object\n};\n\n\nconst PostListPage = () => {\n  const [paginate, setPaginate] = useState([]);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getPosts().then((posts) => {\n      const totalPages = Math.ceil(posts.length / 5);\n      setPaginate(createPaginateArr(totalPages));\n      getPaginatePosts(1).then((posts) => {\n        setPosts(posts);\n      });\n    });\n  }, []);\n\n  const handleClickPaginate = (page) => () => {\n    getPaginatePosts(page).then((posts) => {\n      setPosts(posts);\n    });\n  };\n\n  return(\n    <Root>\n      {posts.length > 0 ? (\n        posts.map((post) => <Post post={post} key={post.id} />)\n      ) : (\n        <Post post={{ title: 'Loading...' }} />\n      )}\n      <PaginateContainer>\n        {posts.length > 0 &&\n          paginate.map((page) => (\n            <Paginate onClick={handleClickPaginate(page)} key={page}>\n              {page}\n            </Paginate>\n          ))}\n      </PaginateContainer>\n    </Root>\n  );\n};\n\nexport default PostListPage;","import styled from '@emotion/styled';\n\nconst AboutPageContainer = styled.div`\n  display: flex;\n  box-sizing: border-box;\n`;\n\nconst AboutLeftPage = styled.div`\n  border: 1px solid gray;\n  width:  50%;\n  height:  calc(100vh - 70px);\n  background: url(https://images.unsplash.com/photo-1529673736833-9302d731fc8f?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8YWJvdXQlMjB1c3xlbnwwfHwwfA%3D%3D&auto=format&fit=crop&w=600&q=60) center/cover no-repeat;\n`;\n\nconst AboutRightPage = styled.div`\n  text-align: center;  \n  width: 50%;\n  margin-top:30px;\n`\n\nconst Aboutme = styled.div`\n  word-wrap: break-word;\n  width:calc(100%-50px);\n  padding:30px;\n`;\n\nconst MePicture = styled.div`\n  margin:20px auto;\n  width: 50%;\n  height:calc(100vh - 330px);\n  background: url(https://ca.slack-edge.com/T4CNEQF6C-U4E4QE7N3-003d575a1cb1-512) center/cover no-repeat;\n`;\n \nconst AboutPage = () => {\n  return(\n    <AboutPageContainer>\n      <AboutLeftPage>\n      </AboutLeftPage>\n      <AboutRightPage>\n        <div>關於我們（取自 Huli）</div>\n        <Aboutme>這是一個技術部落格，重度拖延症患者，興趣是光想不做，有很多想做的事，卻一件都沒有執行。無聊的時候喜歡寫文章，發現自己好像有把事情講得比其他人清楚的能力。相信分享與交流可以讓世界更美好。\bMedium 文章列表請參考：<a href='https://aszx87410.github.io/blog/medium'>https://aszx87410.github.io/blog/medium</a></Aboutme>\n        <MePicture></MePicture>\n      </AboutRightPage>\n    </AboutPageContainer>\n  );\n};\n\nexport default AboutPage;","import { useState } from 'react';\nimport { newPost } from '../../WebAPI';\nimport styled from '@emotion/styled';\nimport { useHistory } from 'react-router-dom';\n\n\nconst NewPostContainer = styled.div`\n  position: absolute;\n  left: 40%;\n  transform: translateX(-80%);\n  height:calc(100vh - 64px);\n  width:100px;\n  padding:30px;\n  z-index:-1;\n  `;\n\nconst NewPostTitle = styled.input`\n  margin-top:10px;\n  margin-bottom:20px;\n  width:500px;\n`;\n\nconst NewPostContent = styled.input`\n  margin-top:10px;  \n  margin-bottom:20px;\n  word-wrap: break-word;\n  width:500px;\n  height:300px;\n\n  `;\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\n\nconst NewPostPage = () => {\n  \n  const [newPostTitle, setNewPostTitle] = useState('');\n  const [newPostContent, setNewPostContent] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    newPost(newPostTitle, newPostContent).then((response) => {\n      if(response.ok === 0) {\n        return setErrorMessage(response.message);\n      }\n      \n      alert('新增文章成功');\n      history.push('/');\n      window.location.reload();\n    });\n  }\n\n  return(\n    <NewPostContainer>\n      <form onSubmit={handleSubmit}>\n        <div>\n          標題：\n          <NewPostTitle type='text' placeholder='請輸入文章標題' value={newPostTitle} onChange={event => setNewPostTitle(event.target.value)}/>\n        </div>\n        <div>\n          內文：\n          <NewPostContent type='textarea' placeholder='請輸入內文' value={newPostContent} onChange={event => setNewPostContent(event.target.value)}/>\n        </div>\n        <div>\n          <button>送出文章</button>\n        </div>\n      </form>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </NewPostContainer>\n  );\n};\n\nexport default NewPostPage;","import styled from '@emotion/styled';\nimport { useHistory } from 'react-router-dom';\nimport { useContext, useState } from 'react';\n\nimport { login, getMe } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport { AuthContext } from '../../contexts';\n\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  width: 500px;\n  height: 120px;\n  padding: 20px;\n  margin: 100px auto;\n  border: 1px solid #fbfbfb;\n  box-shadow: 1px 1px 3px #fbfbfb;\n`;\n\nconst LoginPage = () => {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      if(data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      getMe().then(response => {\n        if(response.ok !==1) {\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        history.push('/'); \n      });\n    });\n  };\n\n  return(\n    <Form onSubmit={handleSubmit}>\n      <div>\n        username:{' '}\n        <input \n          value={username} \n          onChange={event => setUsername(event.target.value)} \n        />\n      </div>\n      <div>\n        password:{' '}\n        <input \n          type='password' \n          value={password} \n          onChange={event => setPassword(event.target.value)} \n        />\n      </div>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n};\n\nexport default LoginPage;\n","import { useState, useContext } from 'react';\nimport styled from '@emotion/styled';\nimport { useHistory } from 'react-router-dom';\nimport { register, getMe } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport { AuthContext } from '../../contexts';\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  width: 500px;\n  height: 120px;\n  padding: 20px;\n  margin: 100px auto;\n  border: 1px solid #fbfbfb;\n  box-shadow: 1px 1px 3px #fbfbfb;\n`;\n\nexport default function RegisterPage() {\n  const { setUser } = useContext(AuthContext);\n  const [nickname, setNickname] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    setErrorMessage('');\n    event.preventDefault();\n    register(nickname, username, password).then((data) => {\n      if (data.ok === 0) return setErrorMessage(data.message);\n      setAuthToken(data.token);\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken('');\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        history.push('/');\n      });\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        nickname:\n        <input\n          value={nickname}\n          onChange={(event) => setNickname(event.target.value)}\n          required\n        />\n      </div>\n      <div>\n        username:\n        <input\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n          required\n        />\n      </div>\n      <div>\n        password:\n        <input\n          value={password}\n          type=\"password\"\n          onChange={(event) => setPassword(event.target.value)}\n          required\n        />\n      </div>\n\n      <button type=\"submit\">註冊</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nconst Article = styled.div`\n  margin: 30px 300px;\n  padding: 20px;\n  color: rgba(0,0,0,0.8);\n  position: relative;\n  min-height: 400px;\n  border: solid 1px red;\n  text-align: left;\n  overflow:scroll;\n`;\n\nconst Title = styled.h1`\n  color: rgba(41, 41, 41, 1);\n  margin-bottom: 30px;\n  font-style: normal;\n  font-weight: 400;\n  text-align: center;\n  word-break: break-word;\n`;\n\nconst TitleContent = styled.div`\n  display: flex;\n`;\n\nconst Author = styled.div`\n  margin-right:30px;\n`;\n\nconst CreateTime = styled.div`\n\n`;\n\n\n\nconst SinglePost = ({postID, posts}) => {\n  \n  let currentPost = [];\n  posts.posts.map((post) => {\n    if(post.id === parseInt(postID)) {currentPost.push(post);}\n  });\n\n  let currentTimeStamp = currentPost[0].createdAt\n  let currentTime = timeStampToString(currentTimeStamp);\n  console.log(currentTime);\n  return(\n    <Article>\n      <Title>{currentPost[0].title}</Title>\n      <TitleContent>\n        <Author>User 編號：{currentPost[0].userId}</Author>\n        <CreateTime>創建時間：{currentTime}</CreateTime>\n      </TitleContent>\n      <div>{currentPost[0].body}</div>\n    </Article>\n  );\n};\n\nfunction  timeStampToString (time){\n  let datetime = new Date();\n   datetime.setTime(time);\n   let year = datetime.getFullYear();\n   let month = datetime.getMonth() + 1;\n   let date = datetime.getDate();\n   let hour = datetime.getHours();\n   let minute = datetime.getMinutes();\n   let second = datetime.getSeconds();\n   let mseconds = datetime.getMilliseconds();\n   return year + \"-\" + month + \"-\" + date+\" \"+hour+\":\"+minute+\":\"+second+\".\"+mseconds;\n};\n\nexport default SinglePost;\n","import React,{ useState , useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { BrowserRouter as Router, Switch, Route, useParams,} from \"react-router-dom\";\nimport Header from '../Header';\nimport { getPosts, getMe } from '../../WebAPI';\nimport HomePage from '../../pages/HomePage';\nimport PostListPage from '../../pages/PostListPage';\nimport AboutPage from '../../pages/AboutPage';\nimport NewPostPage from '../../pages/NewPostPage';\nimport LoginPage from '../../pages/LoginPage';\nimport RegisterPage from '../../pages/RegisterPage';\nimport SinglePost from '../../pages/SinglePost'\nimport { AuthContext } from '../../contexts';\n\n\nconst PageContainer = styled.div`\n  padding-top: 56px;\n  box-sizing:border-box;\n`;\n\n\n\nconst BlogPost = (posts) =>{\n  let { slug } = useParams();\n  return <SinglePost postID={slug} posts={posts}/>;\n}\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getMe().then((response => {\n      if(response.ok) {\n        setUser(response.data);\n      }\n    }));\n  },[]);\n\n  useEffect(() => {\n    getPosts().then(posts => setPosts(posts));\n  },[]);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser}}>\n      <PageContainer>\n        <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" >\n            <HomePage posts={posts}/>\n          </Route>\n          <Route exact path=\"/post-list\" >\n            <PostListPage />\n          </Route>\n          <Route exact path=\"/about\" >\n            <AboutPage />\n          </Route>\n          <Route exact path=\"/new-post\" >\n            <NewPostPage />\n          </Route>\n          <Route path=\"/posts/:slug\">\n            <BlogPost posts={posts}/>\n          </Route>\n          <Route exact path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Route exact path=\"/login\">\n            <LoginPage />\n          </Route>\n        </Switch>\n        </Router>\n      </PageContainer>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App/App\";\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}