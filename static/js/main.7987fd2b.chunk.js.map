{"version":3,"sources":["contexts.js","utils.js","components/Header/Header.js","WebAPI.js","pages/HomePage/HomePage.js","pages/PostListPage/PostListPage.js","pages/AboutPage/AboutPage.js","pages/NewPostPage/NewPostPage.js","pages/LoginPage/LoginPage.js","pages/RegisterPage/RegisterPage.js","pages/SinglePost/SinglePost.js","components/App/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","HeaderContainer","styled","div","Sitename","NavbarList","Nav","Link","props","background","LeftContainer","Header","location","useLocation","history","useHistory","useContext","user","setUser","pathname","to","onClick","push","BASE_URL","getMe","fetch","headers","then","res","json","getPosts","getPaginatePosts","page","Root","PostContainer","PostTitle","PostDate","PostDelete","handleDelete","postID","method","authorization","deletePost","data","ok","alert","window","reload","Post","post","id","title","Date","createdAt","toLocaleString","prototypes","PropTypes","object","HomePage","posts","setPosts","useEffect","map","PaginateContainer","ul","Paginate","li","PostListPage","useState","paginate","setPaginate","totalPages","Math","ceil","length","tempArr","i","createPaginateArr","handleClickPaginate","AboutPageContainer","AboutLeftPage","AboutRightPage","AboutMe","MePicture","AboutPage","href","NewPostContainer","NewPostTitle","input","NewPostContent","ErrorMessage","NewPostPage","newPostTitle","setNewPostTitle","newPostContent","setNewPostContent","errorMessage","setErrorMessage","onSubmit","event","preventDefault","body","JSON","stringify","newPost","response","message","type","placeholder","value","onChange","target","Form","form","LoginPage","username","setUsername","password","setPassword","login","toString","RegisterPage","nickname","setNickname","register","required","Article","Title","h1","TitleContent","Author","SinglePost","currentPost","parseInt","currentTime","time","datetime","setTime","year","getFullYear","month","getMonth","date","getDate","hour","getHours","minute","getMinutes","second","getSeconds","mseconds","getMilliseconds","timeStampToString","console","log","userId","PageContainer","BlogPost","slug","useParams","App","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7987fd2b.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext(null);","const TOKEN_NAME = 'token';\r\n\r\nexport const setAuthToken = (token) => {\r\n    localStorage.setItem(TOKEN_NAME, token);\r\n}\r\n\r\nexport const getAuthToken = () => {\r\n    return localStorage.getItem(TOKEN_NAME);\r\n}","import styled from '@emotion/styled';\r\nimport { useContext } from 'react';\r\nimport { Link, useLocation, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../contexts';\r\nimport { setAuthToken } from '../../utils';\r\n\r\n\r\nconst HeaderContainer = styled.div`\r\n    height: 64px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n    padding: 0px 32px;\r\n    box-sizing: border-box;\r\n    background:white;\r\n`;\r\n\r\nconst Sitename = styled.div`\r\n    font-size: 32px;\r\n    font-weight: bold;\r\n    margin-right: 64px;\r\n`;\r\n\r\nconst NavbarList = styled.div`\r\n    display: flex;\r\n    align-item: center;\r\n    height: 64px;\r\n`;\r\n\r\nconst Nav = styled(Link)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    width: 100px;\r\n    cursor: pointer;\r\n    color:black;\r\n    text-decoration: none;\r\n\r\n    background: ${props => props.background};\r\n`;\r\n\r\nconst LeftContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Header = () => {\r\n    const location = useLocation(); \r\n    const history = useHistory();\r\n    const { user, setUser } = useContext(AuthContext);\r\n\r\n    const handleLogout = () => {\r\n        setAuthToken(' ');\r\n        setUser(null);\r\n        if(location.pathname !== '/') {\r\n            history.push('/');\r\n        }\r\n    };  \r\n\r\n    return(\r\n        <HeaderContainer>\r\n            <LeftContainer>\r\n                <Sitename>我的第一個部落格</Sitename>\r\n                <NavbarList>\r\n                    <Nav background={location.pathname === '/ReactBlog' ? 'rgba(0,0,0, 0.2)' : ''}  to=\"/ReactBlog\">首頁</Nav>\r\n                    <Nav background={location.pathname === '/ReactBlog/post-list' ? 'rgba(0,0,0, 0.2)' : ''}  to=\"/ReactBlog/post-list\">文章列表</Nav>\r\n                    <Nav background={location.pathname === '/ReactBlog/about' ? 'rgba(0,0,0, 0.2)' : ''}  to=\"/ReactBlog/about\">關於</Nav>\r\n                    {user && <Nav background={location.pathname === '/ReactBlog/new-post' ? 'rgba(0,0,0, 0.2)' : ''}  to=\"/ReactBlog/new-post\">發布文章</Nav>}\r\n                </NavbarList>\r\n            </LeftContainer>\r\n            <NavbarList>\r\n                {!user && <Nav background={location.pathname === '/ReactBlog/login' ? 'rgba(0,0,0, 0.2)' : ''} to=\"/ReactBlog/login\">登入</Nav>}\r\n                {!user && <Nav background={location.pathname === '/ReactBlog/register' ? 'rgba(0,0,0, 0.2)' : ''} to=\"/ReactBlog/register\">註冊</Nav>}\r\n                {user && <Nav onClick={handleLogout}>登出</Nav>}\r\n            </NavbarList>\r\n        </HeaderContainer>\r\n    );\r\n};\r\n\r\nexport default Header;","import { getAuthToken } from './utils';\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me';\r\n\r\n// For Login\r\n// Login Authorization\r\nexport const login = (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n          'content-type':'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n          username,\r\n          password\r\n      })\r\n  })\r\n  .then(res => res.json());\r\n}\r\n// set Token to see if already login\r\nexport const getMe = () => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/me`, {\r\n      headers: {\r\n        'authorization': `Bearer ${token}`,\r\n      }\r\n  })\r\n  .then(res => res.json())\r\n}\r\n\r\n// For Register\r\n\r\nexport const register = (nickname, username, password) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n}\r\n\r\n// Fetch Posts\r\n\r\nexport const getPosts = () => {\r\n    return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then(res => res.json());\r\n}\r\n\r\nexport const getPaginatePosts = (page) => {\r\n  return fetch(\r\n    `${BASE_URL}/posts?_page=${page}&_limit=5&_sort=id&_order=desc`\r\n  ).then((res) => res.json());\r\n};\r\n\r\n\r\nexport const newPost = (title, body) => {\r\n    const token = getAuthToken();\r\n    return fetch(`${BASE_URL}/posts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        body,\r\n      }),\r\n    }).then((res) => res.json());\r\n  };\r\n\r\nexport const deletePost = (postID) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts/${postID}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};","import styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { useContext, useEffect, useState} from 'react';\r\nimport { AuthContext } from '../../contexts';\r\nimport { getPosts, deletePost } from '../../WebAPI';\r\n\r\n\r\nconst Root = styled.div`\r\n  top:64px;\r\n  left:150px;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  height:80vh;\r\n   \r\n`;\r\n\r\nconst PostContainer = styled.div`\r\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\r\n  padding: 16px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst PostTitle = styled(Link)`\r\n  font-size: 24px;\r\n  color: #333;\r\n  text-decoration: none;\r\n  flex:1;\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PostDelete = styled.div`\r\n  margin-left: 5px;\r\n  border:1px solid gray;\r\n  border-radius:3px;\r\n  &:hover {\r\n    background:red;\r\n    color:white;\r\n    cursor:pointer;\r\n  }\r\n\r\n`;\r\n\r\n\r\n\r\nconst handleDelete = (postID) => {\r\n  \r\n  deletePost(postID).then((data) => {\r\n  if(data.ok === 0) { return alert('刪除失敗')};\r\n    alert('刪除成功！');\r\n    window.location.reload();\r\n  });\r\n}\r\n\r\nconst Post = ({post, user}) => {\r\n  const postID = post.id;\r\n  return(\r\n    <PostContainer>\r\n      <PostTitle to={`/ReactBlog/posts/${postID}`}>{post.title}</PostTitle>\r\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\r\n      <PostDelete onClick={() => handleDelete(postID)}>{user ? '刪除' : ' '}</PostDelete>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nPost.prototypes = {\r\n  post: PropTypes.object\r\n};\r\n\r\n\r\nconst HomePage = ({posts, setPosts}) => {\r\n  const { user, setUser } = useContext(AuthContext); \r\n  \r\n\r\n  useEffect(() => {\r\n    getPosts().then(posts => setPosts(posts));\r\n  },[]);\r\n\r\n  return(\r\n    <Root>\r\n      {posts.map((post) => <Post key={post.id} post={post} user={user}/>)}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import styled from '@emotion/styled';\r\nimport { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { getPosts, getPaginatePosts } from '../../WebAPI';\r\n\r\nconst Root = styled.div`\r\n  top:64px;\r\n  left:150px;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  height:80vh;\r\n   \r\n`;\r\n\r\nconst PostContainer = styled.div`\r\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\r\n  padding: 16px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: space-between;\r\n\r\n  &:hover {\r\n    background: rgba(200, 200, 200, 0.1);\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled(Link)`\r\n  font-size: 24px;\r\n  color: #333;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PaginateContainer = styled.ul`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0;\r\n`;\r\n\r\nconst Paginate = styled.li`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 25px;\r\n  height: 25px;\r\n  margin: 0 10px;\r\n  border: 1px solid #fbfbfb;\r\n  border-radius: 3px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  &:hover {\r\n    background: rgba(200, 200, 200, 0.1);\r\n  }\r\n`;\r\n\r\n\r\nconst Post = ({post}) => {\r\n  return(\r\n    <PostContainer>\r\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\r\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nconst createPaginateArr = (totalPages) => {\r\n  const tempArr = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    tempArr.push(i);\r\n  }\r\n  return tempArr;\r\n};\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object\r\n};\r\n\r\n\r\nconst PostListPage = () => {\r\n  const [paginate, setPaginate] = useState([]);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPosts().then((posts) => {\r\n      const totalPages = Math.ceil(posts.length / 5);\r\n      setPaginate(createPaginateArr(totalPages));\r\n      getPaginatePosts(1).then((posts) => {\r\n        setPosts(posts);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const handleClickPaginate = (page) => () => {\r\n    getPaginatePosts(page).then((posts) => {\r\n      setPosts(posts);\r\n    });\r\n  };\r\n\r\n  return(\r\n    <Root>\r\n      {posts.length > 0 ? (\r\n        posts.map((post) => <Post post={post} key={post.id} />)\r\n      ) : (\r\n        <Post post={{ title: 'Loading...' }} />\r\n      )}\r\n      <PaginateContainer>\r\n        {posts.length > 0 &&\r\n          paginate.map((page) => (\r\n            <Paginate onClick={handleClickPaginate(page)} key={page}>\r\n              {page}\r\n            </Paginate>\r\n          ))}\r\n      </PaginateContainer>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default PostListPage;","import styled from '@emotion/styled';\r\n\r\nconst AboutPageContainer = styled.div`\r\n  display: flex;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst AboutLeftPage = styled.div`\r\n  border: 1px solid gray;\r\n  width:  50%;\r\n  height:  calc(100vh - 70px);\r\n  background: url(https://images.unsplash.com/photo-1529673736833-9302d731fc8f?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8YWJvdXQlMjB1c3xlbnwwfHwwfA%3D%3D&auto=format&fit=crop&w=600&q=60) center/cover no-repeat;\r\n`;\r\n\r\nconst AboutRightPage = styled.div`\r\n  text-align: center;  \r\n  width: 50%;\r\n  margin-top:30px;\r\n`\r\n\r\nconst AboutMe = styled.div`\r\n  word-wrap: break-word;\r\n  width:calc(100%-50px);\r\n  padding:30px;\r\n`;\r\n\r\nconst MePicture = styled.div`\r\n  margin:20px auto;\r\n  width: 50%;\r\n  height:calc(100vh - 330px);\r\n  background: url(https://ca.slack-edge.com/T4CNEQF6C-U4E4QE7N3-003d575a1cb1-512) center/cover no-repeat;\r\n`;\r\n \r\nconst AboutPage = () => {\r\n  return(\r\n    <AboutPageContainer>\r\n      <AboutLeftPage>\r\n      </AboutLeftPage>\r\n      <AboutRightPage>\r\n        <div>關於我們（取自 Huli）</div>\r\n        <AboutMe>這是一個技術部落格，重度拖延症患者，興趣是光想不做，有很多想做的事，卻一件都沒有執行。無聊的時候喜歡寫文章，發現自己好像有把事情講得比其他人清楚的能力。相信分享與交流可以讓世界更美好。\bMedium 文章列表請參考：<a href='https://aszx87410.github.io/blog/medium'>https://aszx87410.github.io/blog/medium</a></AboutMe>\r\n        <MePicture></MePicture>\r\n      </AboutRightPage>\r\n    </AboutPageContainer>\r\n  );\r\n};\r\n\r\nexport default AboutPage;","import { useState } from 'react';\r\nimport { newPost } from '../../WebAPI';\r\nimport styled from '@emotion/styled';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst NewPostContainer = styled.div`\r\n  position: absolute;\r\n  left: 40%;\r\n  transform: translateX(-80%);\r\n  height:calc(100vh - 64px);\r\n  width:100px;\r\n  padding:30px;\r\n  z-index:-1;\r\n  `;\r\n\r\nconst NewPostTitle = styled.input`\r\n  margin-top:10px;\r\n  margin-bottom:20px;\r\n  width:500px;\r\n`;\r\n\r\nconst NewPostContent = styled.input`\r\n  margin-top:10px;  \r\n  margin-bottom:20px;\r\n  word-wrap: break-word;\r\n  width:500px;\r\n  height:300px;\r\n  `;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\n\r\nconst NewPostPage = () => {\r\n  \r\n  const [newPostTitle, setNewPostTitle] = useState('');\r\n  const [newPostContent, setNewPostContent] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    newPost(newPostTitle, newPostContent).then((response) => {\r\n      if(response.ok === 0) {\r\n        return setErrorMessage(response.message);\r\n      }\r\n      \r\n      alert('新增文章成功');\r\n      history.push('/');\r\n      window.location.reload();\r\n    });\r\n  }\r\n\r\n  return(\r\n    <NewPostContainer>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          標題：\r\n          <NewPostTitle type='text' placeholder='請輸入文章標題' value={newPostTitle} onChange={event => setNewPostTitle(event.target.value)}/>\r\n        </div>\r\n        <div>\r\n          內文：\r\n          <NewPostContent type='textarea' placeholder='請輸入內文' value={newPostContent} onChange={event => setNewPostContent(event.target.value)}/>\r\n        </div>\r\n        <div>\r\n          <button>送出文章</button>\r\n        </div>\r\n      </form>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </NewPostContainer>\r\n  );\r\n};\r\n\r\nexport default NewPostPage;","import styled from '@emotion/styled';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useContext, useState } from 'react';\r\n\r\nimport { login, getMe } from '../../WebAPI';\r\nimport { setAuthToken } from '../../utils';\r\nimport { AuthContext } from '../../contexts';\r\n\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 500px;\r\n  height: 120px;\r\n  padding: 20px;\r\n  margin: 100px auto;\r\n  border: 1px solid #fbfbfb;\r\n  box-shadow: 1px 1px 3px #fbfbfb;\r\n`;\r\n\r\nconst LoginPage = () => {\r\n  const { setUser } = useContext(AuthContext);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setErrorMessage(null);\r\n    login(username, password).then((data) => {\r\n      if(data.ok === 0) {\r\n        return setErrorMessage(data.message);\r\n      }\r\n      setAuthToken(data.token);\r\n\r\n      getMe().then(response => {\r\n        if(response.ok !==1) {\r\n          setAuthToken(null);\r\n          return setErrorMessage(response.toString());\r\n        }\r\n        setUser(response.data);\r\n        history.push('/'); \r\n      });\r\n    });\r\n  };\r\n\r\n  return(\r\n    <Form onSubmit={handleSubmit}>\r\n      <div>\r\n        username:{' '}\r\n        <input \r\n          value={username} \r\n          onChange={event => setUsername(event.target.value)} \r\n        />\r\n      </div>\r\n      <div>\r\n        password:{' '}\r\n        <input \r\n          type='password' \r\n          value={password} \r\n          onChange={event => setPassword(event.target.value)} \r\n        />\r\n      </div>\r\n      <button>登入</button>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { useState, useContext } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { register, getMe } from '../../WebAPI';\r\nimport { setAuthToken } from '../../utils';\r\nimport { AuthContext } from '../../contexts';\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 500px;\r\n  height: 120px;\r\n  padding: 20px;\r\n  margin: 100px auto;\r\n  border: 1px solid #fbfbfb;\r\n  box-shadow: 1px 1px 3px #fbfbfb;\r\n`;\r\n\r\nexport default function RegisterPage() {\r\n  const { setUser } = useContext(AuthContext);\r\n  const [nickname, setNickname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (event) => {\r\n    setErrorMessage('');\r\n    event.preventDefault();\r\n    register(nickname, username, password).then((data) => {\r\n      if (data.ok === 0) return setErrorMessage(data.message);\r\n      setAuthToken(data.token);\r\n      getMe().then((response) => {\r\n        if (response.ok !== 1) {\r\n          setAuthToken('');\r\n          return setErrorMessage(response.toString());\r\n        }\r\n        setUser(response.data);\r\n        history.push('/');\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <div>\r\n        nickname:\r\n        <input\r\n          value={nickname}\r\n          onChange={(event) => setNickname(event.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        username:\r\n        <input\r\n          value={username}\r\n          onChange={(event) => setUsername(event.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        password:\r\n        <input\r\n          value={password}\r\n          type=\"password\"\r\n          onChange={(event) => setPassword(event.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\">註冊</button>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </Form>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nconst Article = styled.div`\r\n  margin: 30px 300px;\r\n  padding: 20px;\r\n  color: rgba(0,0,0,0.8);\r\n  position: relative;\r\n  min-height: 400px;\r\n  border: solid 1px red;\r\n  text-align: left;\r\n  overflow:scroll;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: rgba(41, 41, 41, 1);\r\n  margin-bottom: 30px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  word-break: break-word;\r\n`;\r\n\r\nconst TitleContent = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Author = styled.div`\r\n  margin-right:30px;\r\n`;\r\n\r\n\r\n\r\n\r\nconst SinglePost = ({postID, posts}) => {\r\n  \r\n  let currentPost = [];\r\n  posts.posts.map((post) => {\r\n    if(post.id === parseInt(postID)) {currentPost.push(post);}\r\n  });\r\n\r\n  let currentTimeStamp = currentPost[0].createdAt\r\n  let currentTime = timeStampToString(currentTimeStamp);\r\n  console.log(currentTime);\r\n  return(\r\n    <Article>\r\n      <Title>{currentPost[0].title}</Title>\r\n      <TitleContent>\r\n        <Author>User 編號：{currentPost[0].userId}</Author>\r\n        <div>創建時間：{currentTime}</div>\r\n      </TitleContent>\r\n      <div>{currentPost[0].body}</div>\r\n    </Article>\r\n  );\r\n};\r\n\r\nfunction  timeStampToString (time){\r\n  let datetime = new Date();\r\n   datetime.setTime(time);\r\n   const year = datetime.getFullYear();\r\n   const month = datetime.getMonth() + 1;\r\n   const date = datetime.getDate();\r\n   const hour = datetime.getHours();\r\n   const minute = datetime.getMinutes();\r\n   const second = datetime.getSeconds();\r\n   const mseconds = datetime.getMilliseconds();\r\n   return year + \"-\" + month + \"-\" + date+\" \"+hour+\":\"+minute+\":\"+second+\".\"+mseconds;\r\n};\r\n\r\nexport default SinglePost;\r\n","import React,{ useState , useEffect } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { BrowserRouter as Router, Switch, Route, useParams,} from \"react-router-dom\";\r\nimport Header from '../Header';\r\nimport { getMe } from '../../WebAPI';\r\nimport HomePage from '../../pages/HomePage';\r\nimport PostListPage from '../../pages/PostListPage';\r\nimport AboutPage from '../../pages/AboutPage';\r\nimport NewPostPage from '../../pages/NewPostPage';\r\nimport LoginPage from '../../pages/LoginPage';\r\nimport RegisterPage from '../../pages/RegisterPage';\r\nimport SinglePost from '../../pages/SinglePost'\r\nimport { AuthContext } from '../../contexts';\r\n\r\n\r\nconst PageContainer = styled.div`\r\n  padding-top: 56px;\r\n  box-sizing:border-box;\r\n`;\r\n\r\n\r\n\r\nconst BlogPost = (posts) =>{\r\n  const { slug } = useParams();\r\n  return <SinglePost postID={slug} posts={posts}/>;\r\n}\r\n\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMe().then((response => {\r\n      if(response.ok) {\r\n        setUser(response.data);\r\n      }\r\n    }));\r\n  },[]);\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser}}>\r\n      <PageContainer>\r\n        <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/ReactBlog\">\r\n            <HomePage posts={posts} setPosts={setPosts}/>\r\n          </Route>\r\n          <Route exact path=\"/ReactBlog/post-list\" >\r\n            <PostListPage />\r\n          </Route>\r\n          <Route exact path=\"/ReactBlog/about\" >\r\n            <AboutPage />\r\n          </Route>\r\n          <Route exact path=\"/ReactBlog/new-post\" >\r\n            <NewPostPage />\r\n          </Route>\r\n          <Route path=\"/ReactBlog/posts/:slug\">\r\n            <BlogPost posts={posts}/>\r\n          </Route>\r\n          <Route exact path=\"/ReactBlog/register\">\r\n            <RegisterPage />\r\n          </Route>\r\n          <Route exact path=\"/ReactBlog/login\">\r\n            <LoginPage />\r\n          </Route>\r\n        </Switch>\r\n        </Router>\r\n      </PageContainer>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/App/App\";\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}